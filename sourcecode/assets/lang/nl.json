{
  "home": "Home",
  "genetic-algorithms": "Genetische Algoritmes",
  "behind-the-code": "Achter de Schermen",
  "leaderboard": "Ranglijst",
  "title": "Project groep 4: Tetris AI",
  "upcoming-shape": "Volgende",
  "holding": "Huidige",
  "chromosomes": "Chromosomen",
  "rotate": "Draaien",
  "arrow-up": "Pijl omhoog",
  "drop-down": "Drop down",
  "spacebar": "Spatie",
  "hold": "Houden",
  "shift": "Shift",
  "activate-ai": "AI aanzetten",
  "increase-speed": "Snelheid verhogen",
  "decrease-speed": "Snelheid verlagen",
  "play": "Speel",
  "pause": "Pauseer",
  "reset": "Reset",
  "bestAI": "Beste",
  "on": "Aan",
  "off": "Uit",
  "ga-title": "Genetische algoritmes uitgelegd",
  "ga-intro": "Genetische algoritmes (GAs afgekort) zijn algoritmes gemaakt om optimalisatie-problemen op te lossen. Ze zijn gebaseerd op de evolutie-theorie en natuurlijke selectie, waarin generaties van een soort zich aanpassen en evolueren om zich zo goed mogelijk aan de omstandigheden aan te passen. GAs vinden oplossingen met processen die gebaseerd zijn op natuurlijke selectie zoals selectie, crossover en mutatie. Hoe meer generaties een GA is ondergaan, hoe meer waarschijnlijk dat die generatie de best mogelijke oplossing heeft gevonden op het gegeven probleem.",
  "ga-gen-title": "Wat is de algemene werkwijze?",
  "ga-gen-content": "GAs zijn hevig gebaseerd op natuurlijke processen, dus de termen zijn daar ook op gebaseerd. Een GA start met  een populatie van een gekozen grootte van chromosomen met elk een eigen set van willekeurige gen-waarden. Een chromosoom is te vergelijken met een persoon die een aantal parameters bijhoudt, dit zijn de genen. Nadat elk chromosoom ge\u00ebvalueerd is op basis van de respectievelijke gen-waarden en een fitness-score heeft gekregen, begint de reproductie. Dit proces kan variëren van toepassing tot toepassing, maar over het algemeen worden de hoogst scorende chromosomen gekozen om kinderen met elkaar te maken. Tijdens het maken van een kind wordt elke parameter willekeurig van een van de ouders gekozen, wat dus crossover is. Na dit proces heeft elke gen een kleine kans om te muteren, zodat willekeurige variate verandering kan brengen over de generaties heen. De reproductie wordt herhaald tot de nieuwe generatie even groot is als de vorige, en dit proces blijft zichzelf herhalen. Hoe meer generaties er geweest zijn, hoe meer de huidige generatie geoptimaliseerd is om het probleem op te lossen.",
  "ga-app-title": "Waar en waarom wordt het gebruikt?",
  "ga-app-content": "GAs worden gebruikt om een proces the optimaliseren of om de beste oplossing op een probleem te vinden. Het heeft veel gebruikstoepassingen in veel vaksgebieden, zoals farmacie en geneeskunde, ingenieurswetenschappen, robotica en financiën om er enkele te noemen. Tijdens het ontwerpen van een nieuw type vleugel, bijvoorbeeld, kan de verhouding van opwaartse druk tegen weerstand geoptimaliseerd worden door een GA te gebruiken om de beste parameters van het ontwerp te voorspellen (gebruikte materialen, afmetingen, enz.).",
  "btc-intro-title": "Hoe is het project tot stand gekomen?",
  "btc-intro-content": "De teamleden hebben het werk onder elkaar verdeeld; Matisse heeft het tetris gedeelte gemaakt, Josse codeerde het verzamelen van data, Nathan schreef het genetisch algoritme en Akash en Tomas zorgen voor de website en het gebruikersinterface. Natuurlijk holpen ze elkaar wanneer ze hulp nodig hadden, waardoor elk teamlid interactie had met elk deel van het project.",
  "btc-ga-title": "Het Genetisch Algoritme",
  "btc-ga-content": "De populatie in deze toepassing van genetische algoritmes is een verzameling van gespeelde tetris-spellen en de genen zijn de gewichten van de parameters die de AI gebruikt om te berekenen welke zet het best is. De fitness wordt bepaald in prioreit van de score van het spel en dan het aantal geplaatste tetrominos in een spel. Een van de problemen tijdens het project was dat de AI stopte met evolueren op een bepaald moment. Dat moment wordt wordt het convergentiepunt genoemd, dat optreedt wanneer alle chromosomen hetzelfde worden door een tekort aan variatie dat elke vorm van evolutie tegenhoudt. Dit probleem werd opgelost door meer variatie toe te voegen. Dit kan gedaan worden door de kans op mutatie, crossover, het aantal chromosomen en/of het aantal mogelijke ouders te vergroten. Dit moet wel bewust gedaan worden, want als er te veel variatie is zal de AI stagneren of zelfs minder perfomant worden op lange termijn.",
  "btc-tet-title": "Tetris",
  "btc-tet-content": "Om het tetris spel te maken, werd besloten om het stap voor stap te doen. We deelden het spel op in zijn basiscomponenten en maakten van elk component een functie. Als naar de code gekeken wordt, kan men zien dat al die methoden samenkomen in de MoveDown methode. Voor het speelveld werd een tweedimensionale array gevuld met nullen gebruikt. Op het veld wordt elke vorm met een uniek getal voorgesteld, wat het gemakkelijk maakte om elke vorm een eigen kleur te geven in de print functie. Voor meer speelmogelijkheden is er een optie toegevoegd dat het mogelijk houdt om een vorm te bewaren om later te gebruiken. Daarna is er een EndUp-methode toegevoegd dat de gebruiker toont waar de huidige vorm terecht zal komen in het veld.",
  "btc-dg-title": "Data Verzamelen",
  "btc-dg-content": "Voor het verzamelen van data startten we met veel onderzoek rond dataverzameling en dataschrapen. Het team besliste om data te verzamelen van een tetris leaderboard. We kwamen overeen om een dataschraper te bouwen in Python en na wat problemen met permissie om te schrapen lukte het ons om succesvol de code voor de dataschraper te schrijven. Deze schraper haalde de data van een online tetris leaderboard en zette het om naar een json bestand. Matisse vond echter een website genaamd tetr.io die een API had waarvan we statistieken over de beste tetrisspelers op hun website van konden halen. Dus besloten we om ons systeem te veranderen en javascript te gebruiken om van de API van tetr.io data af te halen. Nu gebruikt de website tetr.io voor het leaderboard.",
  "btc-web-title": "De Website",
  "btc-web-content": "Het hoofddoel was om het project duidelijk te presenteren en om elk component op een intuitieve manier voor te stellen. Er werd gebruik gemaakt van bootstrap om gemakkelijk een layout te maken, maar dit bracht op zich ook problemen. De grootste functie die niet kon toegevoegd worden was een opvouwbare navigatiebar. Er waren veel verschillende methodes geprobeerd om dit te realiseren, van de kant-en-klare bootstrap functie tot eigen code, maar dit was tevergeefs.",
  "lb-title": "Beste Moderne Tetris Spelers",
  "lb-rank": "Ranking",
  "lb-player": "Speler",
  "lb-rating": "TR-Rating",
  "lb-pps": "PPS",
  "lb-error": "Er ging iets mis tijdens het laden van de globale scores.",
  "lb-learnMore": "Toon/Verberg info",
  "lb-info": "Dit leaderboard wordt bijgehouden en geüpdatet op tetr.io. Op deze website kunnen gebruikers competitief het Tetris spel spelen. Door online competitieve te spellen winnen kan een speler een hogere TR Rating krijgen. Slechts 1% van de spelers haalt een TR Rating van meer dan 24520.",
  "lb-gettingData": "Data verzamelen..."
}